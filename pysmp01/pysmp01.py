# -*- coding: utf-8 -*-
import pygame
import pygame.mixer
import time
from pygame.locals import *
import sys

#----------------------------------------------------------
# �O���[�o���f�[�^
(GMX,GMY) = (400,400)   # ��ʃT�C�Y
screen = pygame.display.set_mode((GMX, GMY))    # �w��T�C�Y�̉�ʂ𐶐�

# MAP�f�[�^
map = [[1,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,3,3,3,3,3,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
       [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3]]

#----------------------------------------------------------
pygame.mixer.init(44100)    # BGM�����ݒ�

# �Ȃ����[�v�Đ�����
#IN : �t�@�C����
def BGM_Play(fname):     # wav,mp3,ogg
    pygame.mixer.music.load(fname)     # ���y�t�@�C���̓ǂݍ���
    pygame.mixer.music.play(-1)             # ���y�̍Đ���(-1=���[�v)

# �Ȃ��I������
def BGM_Stop():
    pygame.mixer.music.stop()               # �Đ��̏I��

#----------------------------------------------------------
# SE�p�̗̈�
se_list = [0]*16  # ��̗̈���쐬

# SE�����[�h
#IN : �t�@�C����, SE�ԍ�
def SE_Load(fname,no):
    se_list[no] = pygame.mixer.Sound(fname)

# SE���Đ�
def SE_Play(no):
    se_list[no].play()  # �T�E���h���Đ�

#----------------------------------------------------------
# �摜�p�̗̈�
grp = [0]*32  # ��̗̈���쐬

# �摜�����[�h
def GRP_Load(fname,no):
    grp[no] = pygame.image.load(fname).convert_alpha()

# �摜��`��
#IN : ���W, �摜�ԍ�
def GRP_Draw(x,y,no):
    screen.blit(grp[no], (x,y))       # �G��`��

#----------------------------------------------------------
# ���C������
def main():
    pygame.init()                                   # Pygame�̏�����
    global GMX, GMY, screen, map
    (x,y) = (GMX/2, GMY/2)  # �L�����ʒu
    pygame.display.set_caption("pysmp")             # �^�C�g���o�[�ɕ\�����镶��
    font = pygame.font.Font(None, 24)               # �t�H���g�̐ݒ�(�T�C�Ypx)
    pygame.mixer.set_num_channels(8)                # SE�̃`�����l������ݒ�

    # BGM PLAY
    #BGM_Play("pysmp01/bgm.ogg")

    # SE LOAD
    SE_Load("se01.wav", 1)
    SE_Load("se02.wav", 2)

    # �L�����G LOAD
    GRP_Load("chrA07.png", 0)

    # BG�G LOAD
    GRP_Load("bg01.png", 1)
    GRP_Load("bg02.png", 2)
    GRP_Load("bg03.png", 3)

    #----------------------------------------------------------
    # �Q�[�����[�v
    while (1):
        # �L�[�C�x���g����(�L�����N�^�摜�̈ړ�)
        pressed_key = pygame.key.get_pressed()
        if pressed_key[K_LEFT]:
            x -= 8
            SE_Play(1)
        if pressed_key[K_RIGHT]:
            x += 8
            SE_Play(1)
        if pressed_key[K_UP]:
            y -= 8
            SE_Play(1)
        if pressed_key[K_DOWN]:
            y += 8
            SE_Play(1)
        # �L�����̍��W����ʂ͈̔͊O�ɂ���ꍇ�A�͈͓��ɓ����
        if x < 0:
            x = 0
        if x > GMX:
            x = GMX
        if y < 0:
            y = 0
        if y > GMY:
            y = GMY

        screen.fill((0,0,0))        # ��ʂ����F(#000000)�ɓh��Ԃ�

        # �w�i�`��
        (mx, my) = (GMX/16, GMY/16) # 1��ʓ���TIP��
        yy = 0
        while (yy<my):
            xx = 0
            while (xx<mx):
                if map[yy][xx] == 3:  # ��Q���H
                    GRP_Draw(xx*16, yy*16, 1)    # ���n��`��
                GRP_Draw(xx*16, yy*16, map[yy][xx])
                xx += 1
            yy += 1

        # ������`��
        text = font.render("MAP DRAW TEST", True, (255,245,155))   # �`�悷�镶����̐ݒ�
        screen.blit(text, [10, 10]) # ������̕\���ʒu

        # �L������`��
        GRP_Draw(x,y,0)

        #--------------------------------------
        pygame.display.update()     # ��ʂ��X�V
        pygame.time.wait(30)        # �X�V���ԊԊu
        # �C�x���g����
        for event in pygame.event.get():
            if event.type == QUIT:  # ����{�^���������ꂽ��I��
                pygame.quit()       # Pygame�̏I��(��ʕ�����)
                sys.exit()
            # �L�[���������Ƃ�
            if event.type == KEYDOWN:
                # ESC�L�[�Ȃ�I��
                if event.key == K_ESCAPE:
                    pygame.quit()
                    sys.exit()

#----------------------------------------------------------
# �Q�[���J�n����
if __name__ == "__main__":
    main()
